name: Publish

on:
  workflow_dispatch:
    inputs:
      ref:
        description: "Git ref to publish from (branch/tag/SHA)"
        required: true
        default: "main"
      package_dir:
        description: "Path to package ('.' = repo root)"
        required: true
        default: "."
      npm_tag:
        description: "npm dist-tag"
        required: true
        default: "latest"
      access:
        description: "npm access (scoped public usually 'public')"
        type: choice
        options: ["public", "restricted"]
        required: true
        default: "public"
      dry_run:
        description: "Use npm publish --dry-run"
        type: boolean
        required: true
        default: false

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/

      - name: Install
        working-directory: ${{ inputs.package_dir }}
        run: npm ci

      # Optional build if you have a build script; harmless if you don't
      - name: Build (if present)
        working-directory: ${{ inputs.package_dir }}
        run: |
          if npm run | grep -q "^  build"; then
            npm run build
          else
            echo "No build script; skipping."
          fi

      # Tiny, robust existence check
      - name: Ensure version not already on npm
        working-directory: ${{ inputs.package_dir }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          set -euo pipefail
          NAME=$(node -p "require('./package.json').name")
          VER=$(node -p "require('./package.json').version")
          echo "Checking $NAME@$VERâ€¦"
          if npm view "$NAME@$VER" version >/dev/null 2>&1; then
            echo "$NAME@$VER already exists on npm. Aborting."
            exit 1
          else
            echo "OK: $NAME@$VER not published yet."
          fi

      - name: Publish
        working-directory: ${{ inputs.package_dir }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          FLAGS=""
          if [ "${{ inputs.dry_run }}" = "true" ]; then FLAGS="--dry-run"; fi
          echo "Publishing with --tag '${{ inputs.npm_tag }}' --access '${{ inputs.access }}' $FLAGS"
          npm publish --tag "${{ inputs.npm_tag }}" --access "${{ inputs.access }}" $FLAGS
